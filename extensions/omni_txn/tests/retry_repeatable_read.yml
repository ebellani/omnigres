$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  init:
  - create extension omni_txn cascade
  - create extension dblink
  - create extension omni_edbg
  - select dblink_connect('another_session', 'hostaddr=127.0.0.1 dbname=yregress user=yregress port=' || (select setting
                                                                                                          from pg_settings
                                                                                                          where name = 'port'))
  - create table inventory
    (
        id           serial primary key,
        product_name text,
        quantity     int
    )
  - insert into inventory (product_name, quantity)
    values ('Widget', 100)
  - |
    create or replace function call_other_session() returns void
        language plpgsql as
    $$
    begin
        perform dblink_exec('another_session',
                            'call omni_txn.retry($other$update inventory set quantity = quantity - 10$other$, repeatable_read => true, gather_backoff_values => false)');
        return;
    end;
    $$
  - create table retries
    (
        count     int,
        iso_level text
    )

tests:

- name: smoke test for retry
  transaction: false
  tests:
  - query: |
      call omni_txn.retry($$select quantity from inventory where product_name = 'Widget';
      select call_other_session() where omni_txn.current_retry_attempt() = 0;
      update inventory set quantity = quantity + 20 where product_name = 'Widget';
      insert into retries (count, iso_level) select omni_txn.current_retry_attempt(), current_setting('transaction_isolation');
      $$, repeatable_read => true, gather_backoff_values => false);
    transaction: false
  - query: select quantity
           from inventory
           where product_name = 'Widget'
    results:
    - quantity: 110
  - query: select count, iso_level
           from retries
    results:
    - count: 1
      iso_level: repeatable read